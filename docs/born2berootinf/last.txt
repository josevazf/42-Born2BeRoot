NOTE: If you encounter errors like "No commands", try again with the "sudo" parameter, most likely the problem will be solved.

After the SDAs are configured,
	1-) "su" 									--> Type and login to the root account (Root password will ask the first password we set when installing the system)
	2-) "apt install sudo" 						--> Type and install the sudo package (Sudo grants root privileges to users)
	3-) "adduser kullanıcı_adı sudo"			--> Adds the specified user to the sudo group. NOTE: Check if the user has been added to the group with "getent group sudo"!
	4-) We restart the system with the "reboot" command.
	-------------------------------------------------------------------------------------------------------------------------------------------------------------
	5-) After logging in to the user added to the group, let's check again with "sudo -v".
	6-) "sudo apt update"						--> Let's write and update the package lists.
	7-) "sudo visudo -f /etc/sudoers.d/blabla"	--> Opening sudo files with "visudo" creates a safer structure, we created a new file called blabla in the specified directory and we will add the following codes.
		@-) Defaults		passwd_tries=3									// With Sudo, the maximum number of password attempts is 3 (3 is also standard)
		@-) Defaults		badpass_message="bla bla bla bla bla bla"		// Your error message after incorrect password attempts
		@-) Defaults		logfile="/var/log/sudo/blabla"					// Stores all used sudo commands in the specified file
		@-) Defaults		log_input,log_output							// It is used to keep logs of inputs and outputs.
		@-) Defaults		iolog_dir="/var/log/sudo"						// Archive log_input and log_output events to the specified directory.
		@-) Defaults		requiretty										// Enforces TTY mode.
		@-) Defaults		secure_path="pdf'ye bak"						// To limit the directories used by Sudo.
	8-) We restart the system with the "reboot" command.
	-------------------------------------------------------------------------------------------------------------------------------------------------------------
	9-) "sudo apt install openssh-server"		--> Installs the Openssh-server package (Openssh provides a secure channel over an unsecured network from the outside)
	10-) "sudo nano /etc/ssh/sshd_config"		--> SSH Configurations section.
		@-) Change "#Port 22" to "Port 4242" without quotes
		@-) Change "#PermitRootLogin prohibit-password" to "PermitRootLogin no". NOTE: You will do it without quotation marks and # signs.
	11-) We restart the system with the "reboot" command.
	-------------------------------------------------------------------------------------------------------------------------------------------------------------
	12-) "sudo service ssh status"				--> You can view the ssh status by typing this command.
	13-) "sudo apt install ufw"					--> It stands for "uncomplicated firewall", so it says that it is an uncomplicated firewall (: you install that package.
	14-) "sudo ufw enable"						--> We activate our firewall.
	15-) "sudo ufw allow 4242"					--> For port 4242, we add a new rule to our firewall and allow it.
	16-) "sudo ufw status"						--> Checking the status of our firewall.
	17-) We switch off the system with the "poweroff" command.
	-------------------------------------------------------------------------------------------------------------------------------------------------------------
	THIS IS IMPORTANT: WE NEED TO DO PORT FORWARDING ON THE VM IN ORDER TO ASSIGN SSH CONNECTION.
		-Right-click on the virtual server we have installed in the VM interface and select the network section from the settings section, then click on the B.point orientation section under the advanced menu.
		-On the right side of the new window that opens, there is a new connection rule button in green colour, click it 1 time. Then click 
		-NAME Section : SSH
		-PROTOCOL Section : TCP
		-Mainframe IP Section : 127.0.0.1
		-Mothership B.N Part : 4242
		-GUEST IP Section : 10.0.2.15
		-GUEST B.N Section : 4242
		You can edit it as follows and press OK below.
	-------------------------------------------------------------------------------------------------------------------------------------------------------------
	18-) "sudo nano /etc/login.defs"			--> With Nano we open the file and search in it (NOTE: DO NOT WORN OUT ON THE VIRTUAL SERVER ITSELF, AS WE ARE NOW ABLE TO EXIT SSH CONNECTION THROUGH THE TERMINAL) :)
		@-) PASS_MAX_DAYS	99999 --> PASS_MAX_DAYS	30 // We have indicated that the password will expire every 30 days
		@-) PASS_MIN_DAYS	0 --> PASS_MIN_DAYS	2 // After changing the password, we stated that it would be changed again at least 2 days later.
		@-) PASS_WARN_AGE   7 // We specified that the user should receive a warning 7 days before the password expires.
	19-) "sudo apt install libpam-pwquality"	--> We install the libpam-pwquality package to increase the security of passwords.
	20-) "sudo nano /etc/pam.d/common-password"	--> Open the common-password document and search in it: "password		requisite						pam_pwquality.so retry=3"
		-retry=3'the following are added with one space after the word:
			@-) minlen=10					// Minimum length 10
			@-) ucredit=-1 dcredit=-1		// Must contain at least one uppercase and one numeric character
			@-) maxrepeat=3					// Maximum 3 consecutive characters can be used.
			@-) reject_username				// Must not contain the user name.
			@-) difok=7						// Requirement of 7 different characters not included in the old password
			@-) enforce_for_root			// We have made the rules applicable to root
			@@-) FINAL STATUS: password		requisite						pam_pwquality.so retry=3 minlen=10 ucredit=-1 dcredit=-1 maxrepeat=3 reject_username difok=7 enforce_for_root
	-------------------------------------------------------------------------------------------------------------------------------------------------------------
	NOW TO TEST OUR NEW CONFIGURATION WE WILL CHANGE THE PASSWORDS FOR ROOT AND THE OTHER USER WE CREATED DURING THE INSTALLATION.
	-------------------------------------------------------------------------------------------------------------------------------------------------------------
	21-) "sudo addgroup user42"					--> "user42" called "The New Group".
	22-) "sudo adduser kullanıcı_adı user42"	--> user42 We have added the specified user to the group.
	23-) "sudo passwd kullanıcı_adı"			--> Let's change our passwords.
	-------------------------------------------------------------------------------------------------------------------------------------------------------------
	24-) "sudo crontab -u root -e"				--> Crontab can be thought of as a timed file execution system. Bottom line "*/10 * * * * sh /path/to/script" change or add.