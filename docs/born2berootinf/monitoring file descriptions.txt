sort = alphabetical sorting.
uniq = separating repeating lines.
$1,$2... = We can say that Mer $1, haba $2, yesterday $3 or $4 columns are holding.
free -m = It shows the amount of Ram in Mebibytes. The reason for doing so is to calculate the percentage over the uses of the script, etc. for us to do.
grep '^/dev/' = ^ takes the places starting with the word after the suffix.
grep -v '/boot$' = -v The suffix indicates the word to be extracted
awk '{ft += $2} END {print ft}' = ft It can be thought of as a variable, it adds the data contained in $2 in ft and prints ft to the screen.
cut -c 9- | xargs | awk '{printf("%.1f%%") = "cut -c 9-" Used to delete a character or a sequence of characters. "xargs" As a function, it forwards the previously used output to the next command. "printf("%.1f%%%")" Takes 1 character after "." in float value type and adds "%" at the end.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
arc=$(uname -a)																									--> Indicates the architecture and kernel version of the current operating system.
pcpu=$(grep "physical id" /proc/cpuinfo | sort | uniq | wc -l)													--> Returns the number of physical processors.
vcpu=$(grep "^processor" /proc/cpuinfo | wc -l)																	--> Returns the number of virtual processors.
fram=$(free -m | awk '$1 == "Mem:" {print $2}')																	--> Returns the amount of accessible RAM of the server.
uram=$(free -m | awk '$1 == "Mem:" {print $3}')																	--> Returns the amount of RAM used.
pram=$(free | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}')													--> printf("%.2f") returns 2 values to be taken after the comma $3/$2*100 returns the usage as a percentage
fdisk=$(df -Bg | grep '^/dev/' | grep -v '/boot$' | awk '{ft += $2} END {print ft}')							--> Returns the amount of storage accessible on the server.
udisk=$(df -Bm | grep '^/dev/' | grep -v '/boot$' | awk '{ut += $3} END {print ut}')							--> Returns the used storage space of the server.
pdisk=$(df -Bm | grep '^/dev/' | grep -v '/boot$' | awk '{ut += $3} {ft+= $2} END {printf("%d"), ut/ft*100}')	--> "used storage space / accessible space * 100" gives us the percentage usage.
cpul=$(top -bn1 | grep '^%Cpu' | cut -c 9- | xargs | awk '{printf("%.1f%%"), $1 + $3}')							--> Gives the processor utilisation rate as a percentage.
lb=$(who -b | awk '$1 == "sistem" {print $3 " " $4}')															--> Gives the date and time of the last reboot.
lvmt=$(lsblk | grep "lvm" | wc -l)																				--> Gives information about discs configured with LVM.
lvmu=$(if [ $lvmt -eq 0 ]; then echo hayÄ±r; else echo evet; fi)													--> Indicates whether LVM is active on the system. NOTE: You need to install the net-tools package for the other items to work properly.
ctcp=$(cat /proc/net/sockstat{,6} | awk '$1 == "TCP:" {print $3}')												--> Returns the current number of active connections.
ulog=$(users | wc -w)																							--> Returns the number of users using the server.
ip=$(hostname -I)																								--> Gives the server IP Address.
mac=$(ip link show | awk '$1 == "link/ether" {print $2}')														--> The server gives the MAC Address.
cmds=$(journalctl _COMM=sudo | grep COMMAND | wc -l)															--> It gives the number of commands executed with sudo. (If sudo is logged in, it is written together with the number of sudo usage of other users, otherwise it gives information as much as the sudo command used by the current user).
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

wall "	#Architecture and Kernel Version: $arc
	#Number of Physical Processors: $pcpu
	#Number of Virtual Processors: $vcpu
	#RAM Amount and Usage: $uram/${fram}MB ($pram%)
	#Disc Quantity and Usage: $udisk/${fdisk}Gb ($pdisk%)
	#CPU Utilisation Rate: $cpul
	#Last Restart Date: $lb
	#LVM Utilisation Status: $lvmu
	#Number of Active Connections: $ctcp ESTABLISHED
	#Number of People Using the Server: $ulog
	#IP and MAC Address: IP $ip ($mac)
	#Number of Used Sudos: $cmds cmd" # We add this to appear in other terminals.
	--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NOT : chmod +x monitoring.sh ile sh Let's not forget to define authorisation to our file.